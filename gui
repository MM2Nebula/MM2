-- Latte Hub | MM2 with Weapon Spawner, ESP, and Enhanced Features
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

function gradient(text, startColor, endColor)
		local result = "";
		local length = #text;
		for i = 1, length do
			local t = (i - 1) / math.max(length - 1, 1);
			local r = math.floor((startColor.R + ((endColor.R - startColor.R) * t)) * 255);
			local g = math.floor((startColor.G + ((endColor.G - startColor.G) * t)) * 255);
			local b = math.floor((startColor.B + ((endColor.B - startColor.B) * t)) * 255);
			local char = text:sub(i, i);
			result = result .. '<font color=\"rgb(' .. r .. ", " .. g .. ", " .. b .. ')\">' .. char .. "</font>";
		end
		return result;
	end

    local Confirmed = false;
	WindUI:Popup({Title=gradient("Latte Hub v2", Color3.fromHex("#f0e407"), Color3.fromHex("#16a9f2")),Icon="info",Content=(gradient("Please join my Discord server if you want free items!", Color3.fromHex("#f0e407"), Color3.fromHex("#16a9f2")) .. "<br/>" .. gradient("https://discord.gg/pU8r42d6hd", Color3.fromHex("#00BFFF"), Color3.fromHex("#1E90FF"))),Buttons={{Title=gradient("Exit", Color3.fromHex("#f0e407"), Color3.fromHex("#f0e407")),Callback=function()
	end,Variant="Tertiary"},{Title=gradient("Copy Discord", Color3.fromHex("#00BFFF"), Color3.fromHex("#1E90FF")),Callback=function()
		setclipboard("https://discord.gg/pU8r42d6hd")
		WindUI:Notify({ 
			Title = "Discord Copied!", 
			Content = "Discord invite copied to clipboard!", 
			Icon = "check-circle", 
			Duration = 3 
		})
		Confirmed = true; -- Continue the script
	end,Variant="Secondary"},{Title=gradient("Continue", Color3.fromHex("#90f09e"), Color3.fromHex("#13ed34")),Callback=function()
		Confirmed = true;
	end,Variant="Secondary"}}});
	repeat
		task.wait();
	until Confirmed 

local Window = WindUI:CreateWindow({
    Title = gradient("Latte Hub v2", Color3.fromHex("#f0e407"), Color3.fromHex("#16a9f2")),
    Icon = "infinity",
    CornerRadius = UDim.new(0,16),
    Author = "Latte Scripts",
    Folder = "",
    Size = UDim2.new(0, 580, 0, 460),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    Background = "",
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function() end,
    },
})

-- 👇 Try adjusting the actual frame background after creation:
if Window.Main then
    Window.Main.BackgroundTransparency = 0.5
end


-- ESP System Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local murderHasKnife = false
local sheriffHasGun = false
local currentESPOptions = { "Esp All" }
local highlightEnabled = true
local lineESPEnabled = false
local coinESPEnabled = false
local tracers = {}

-- Anti-Stealer Variables
local antiStealerEnabled = false
local tradeScamProtectionEnabled = false

-- Weapon Dupe Variables (from script 1)
local WeaponName = ""
local FunctionCall = 1

-- Visual Weapon Variables (from script 1)
local fromWeapon = ""
local toWeapon = ""

-- UI Path for dupe functions
local UIPath
if LocalPlayer.PlayerGui.MainGUI.Game:FindFirstChild("Inventory") ~= nil then
    UIPath = LocalPlayer.PlayerGui.MainGUI.Game.Inventory.Main
else
    UIPath = LocalPlayer.PlayerGui.MainGUI.Lobby.Screens.Inventory.Main
end

-- Weapon Dupe Functions (from script 1)
local function VisualDupe()
    wait(math.random(1, 3))
    for i,v in pairs(UIPath.Weapons.Items.Container:GetChildren()) do
        for i,v in pairs(v.Container:GetChildren()) do
            if v.Name == "Christmas" or v.Name == "Halloween" then
                for i,v in pairs(v.Container:GetChildren()) do
                    if v:IsA("Frame") and v.ItemName.Label.Text == WeaponName then
                        local amount = v.Container.Amount.Text
                        if amount == "" or amount == "None" then
                            v.Container.Amount.Text = "x2"
                        else
                            local num = tonumber(amount:match("x(%d+)"))
                            if num then
                                v.Container.Amount.Text = "x" .. tostring(num + 1)
                            end
                        end
                    end
                end
            else
                if v:IsA("Frame") and v.ItemName.Label.Text == WeaponName then
                    local amount = v.Container.Amount.Text
                    if amount == "" or amount == "None" then
                        v.Container.Amount.Text = "x2"
                    else
                        local num = tonumber(amount:match("x(%d+)"))
                        if num then
                            v.Container.Amount.Text = "x" .. tostring(num + 1)
                        end
                    end
                end
            end
        end
    end
end

local function InventoryDupe()
    wait(math.random(3, 5))
    for i,v in pairs(UIPath.Weapons.Items.Container:GetChildren()) do
        for i,v in pairs(v.Container:GetChildren()) do
            if v.Name == "Christmas" or v.Name == "Halloween" then
                for i,v in pairs(v.Container:GetChildren()) do
                    if v:IsA("Frame") then
                        if v.ItemName.Label.Text ~= "Default Knife" and v.ItemName.Label.Text ~= "Default Gun" then
                            local amount = v.Container.Amount.Text
                            if amount == "" or amount == "None" then
                                v.Container.Amount.Text = "x2"
                            else
                                local num = tonumber(amount:match("x(%d+)"))
                                if num then
                                    v.Container.Amount.Text = "x" .. tostring(num * 2)
                                end
                            end
                        end
                    end
                end
            else
                if v:IsA("Frame") then
                    if v.ItemName.Label.Text ~= "Default Knife" and v.ItemName.Label.Text ~= "Default Gun" then
                        local amount = v.Container.Amount.Text
                        if amount == "" or amount == "None" then
                            v.Container.Amount.Text = "x2"
                        else
                            local num = tonumber(amount:match("x(%d+)"))
                            if num then
                                v.Container.Amount.Text = "x" .. tostring(num * 2)
                            end
                        end
                    end
                end
            end
        end
    end
    for i,v in pairs(UIPath.Pets.Items.Container.Current.Container:GetChildren()) do
        if v:IsA("Frame") then
            local amount = v.Container.Amount.Text
            if amount == "" or amount == "None" then
                v.Container.Amount.Text = "x2"
            else
                local num = tonumber(amount:match("x(%d+)"))
                if num then
                    v.Container.Amount.Text = "x" .. tostring(num * 2)
                end
            end
        end
    end
end

-- Visual Weapon Functions (from script 1)
local function NameMatch(name, search)
    local sanitizedName = name:gsub("_G_%d%d%d%d", ""):gsub("_K_%d%d%d%d", ""):lower()
    local sanitizedSearch = search:lower()
    return sanitizedName:find(sanitizedSearch, 1, true) ~= nil
end

-- Trade Scam Functions (from script 1)
local function StartVisualTrade()
    if game:GetService("Players").LocalPlayer.PlayerGui.TradeGUI.Enabled == true or game:GetService("Players").LocalPlayer.PlayerGui.TradeGUI_Phone.Enabled == true then
        wait(1)
        WindUI:Notify({ 
            Title = "Trade Scam Active", 
            Content = "Items In Trade Are Now Visual, Remove All Items!", 
            Icon = "alert-triangle", 
            Duration = 5 
        })
    else
        WindUI:Notify({ 
            Title = "Trade Scam Error", 
            Content = "You Need To Be In Trade For This To Work!", 
            Icon = "x-circle", 
            Duration = 5 
        })
    end
end

-- Coin ESP System
local Elements_Table = {
  Roles = {
    Murderer = Color3.fromRGB(255,0,150),
    Sheriff = Color3.fromRGB(0,55,155),
    Innocent = Color3.fromRGB(160,160,160)
  },
  Objects = {
    Gun = Color3.fromRGB(200,255,0),
    Coin = Color3.fromRGB(255,200,0)
  }
}

local coinESPObjects = {}

-- ESP Functions
local function getRole(player)
    local character = player.Character
    if not character then return nil end
    local backpack = player:FindFirstChild("Backpack")
    if character:FindFirstChild("Knife") or (backpack and backpack:FindFirstChild("Knife")) then return "Murderer" end
    if character:FindFirstChild("Gun") or (backpack and backpack:FindFirstChild("Gun")) then return "Sheriff" end
    return "Innocent"
end

local function isPlayerTargeted(player, selectedOptions)
    local role = getRole(player)
    if not role then return false end
    if table.find(selectedOptions, "Esp All") then return true end
    if table.find(selectedOptions, "Esp Murder") and role == "Murderer" then return true end
    if table.find(selectedOptions, "Esp Sheriff") and role == "Sheriff" then return true end
    if table.find(selectedOptions, "Esp Sheriff / Murder") and (role == "Sheriff" or role == "Murderer") then return true end
    return false
end

local function getHighlightColor(role)
    if role == "Murderer" then
        return Color3.new(1, 0, 0)
    elseif role == "Sheriff" then
        return Color3.new(0, 0, 1)
    elseif murderHasKnife and sheriffHasGun then
        return Color3.new(0, 1, 0)
    end
    return nil
end

local function getTracerColor(role)
    if role == "Murderer" then
        return Color3.new(1, 0, 0)
    elseif role == "Sheriff" then
        return Color3.new(0, 0, 1)
    elseif murderHasKnife and sheriffHasGun then
        return Color3.new(0, 1, 0)
    else
        return Color3.new(1, 1, 1)
    end
end

local function createHighlight(character, color)
    local highlight = character:FindFirstChild("RoleHighlight")
    if not highlight then
        highlight = Instance.new("Highlight")
        highlight.Name = "RoleHighlight"
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 1
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Adornee = character
        highlight.Parent = character
    end
    highlight.FillColor = color
end

local function removeHighlight(character)
    local highlight = character:FindFirstChild("RoleHighlight")
    if highlight then highlight:Destroy() end
end

local function createTracer(player, color)
    local line = Drawing.new("Line")
    line.Thickness = 2
    line.Color = color or Color3.new(1, 1, 1)
    line.Transparency = 1
    tracers[player] = line
end

local function removeTracer(player)
    if tracers[player] then
        tracers[player]:Remove()
        tracers[player] = nil
    end
end

local function updateESP()
    murderHasKnife = false
    sheriffHasGun = false

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local role = getRole(player)

            if role == "Murderer" then murderHasKnife = true end
            if role == "Sheriff" then sheriffHasGun = true end
        end
    end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local role = getRole(player)
            local target = isPlayerTargeted(player, currentESPOptions)

            if highlightEnabled then
                if target then
                    local color = getHighlightColor(role)
                    if color then
                        createHighlight(player.Character, color)
                    else
                        removeHighlight(player.Character)
                    end
                else
                    removeHighlight(player.Character)
                end
            else
                removeHighlight(player.Character)
            end

            if lineESPEnabled and target then
                local color = getTracerColor(role)
                if not tracers[player] then 
                    createTracer(player, color) 
                else
                    tracers[player].Color = color
                end
            else
                removeTracer(player)
            end
        end
    end
end

RunService.RenderStepped:Connect(function()
    if not lineESPEnabled then return end
    for player, line in pairs(tracers) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart
            local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)
            local rootGuiSize = workspace.CurrentCamera.ViewportSize
            if onScreen then
                line.From = Vector2.new(rootGuiSize.X / 2, rootGuiSize.Y)
                line.To = Vector2.new(screenPos.X, screenPos.Y)
                line.Visible = true
            else
                line.Visible = false
            end
        else
            line.Visible = false
        end
    end
end)

local function monitorPlayer(player)
    player.CharacterAdded:Connect(function()
        local backpack = player:WaitForChild("Backpack")
        backpack.ChildAdded:Connect(updateESP)
        backpack.ChildRemoved:Connect(updateESP)
        updateESP()
    end)

    if player.Character then
        local backpack = player:FindFirstChild("Backpack")
        if backpack then
            backpack.ChildAdded:Connect(updateESP)
            backpack.ChildRemoved:Connect(updateESP)
        end
    end
end

for _, player in ipairs(Players:GetPlayers()) do monitorPlayer(player) end
Players.PlayerAdded:Connect(monitorPlayer)

-- Coin ESP Functions
local function createCoinESP(obj)
    if obj:FindFirstChildWhichIsA("BillboardGui") then return end
    if not coinESPEnabled then return end
    
    if obj.Name == "Coin_Server" and obj:IsA("Part") or obj.Name == "GunDrop" and obj:IsA("Tool") then
        local bbg = Instance.new("BillboardGui")
        bbg.Size = UDim2.new(0,60,0,20)
        bbg.AlwaysOnTop = true
        bbg.Parent = obj
        
        local tl = Instance.new("TextLabel")
        tl.Size = UDim2.new(1,0,1,0)
        tl.BackgroundTransparency = 1
        tl.TextColor3 = (obj.Name == "GunDrop" and Elements_Table.Objects.Gun or Elements_Table.Objects.Coin)
        tl.TextSize = 8
        tl.TextWrapped = true
        tl.Text = (obj.Name == "GunDrop" and "Dropped Gun" or "Coin | Egg")
        tl.Parent = bbg
        
        coinESPObjects[obj] = bbg
    end
end

local function removeCoinESP(obj)
    if coinESPObjects[obj] then
        coinESPObjects[obj]:Destroy()
        coinESPObjects[obj] = nil
    end
end

local function updateCoinESP()
    if coinESPEnabled then
        -- Add ESP to existing objects
        for _, obj in pairs(workspace:GetDescendants()) do
            createCoinESP(obj)
        end
    else
        -- Remove all coin ESP
        for obj, bbg in pairs(coinESPObjects) do
            if bbg then bbg:Destroy() end
        end
        coinESPObjects = {}
    end
end

-- Connect coin ESP to workspace changes
workspace.DescendantAdded:Connect(function(obj)
    if coinESPEnabled then
        createCoinESP(obj)
    end
end)

workspace.DescendantRemoving:Connect(function(obj)
    removeCoinESP(obj)
end)

-- Weapon Spawner Variables
local weaponName = ""
local selectedCrate = "Christmas2024Box"

-- Weapon Spawner Functions
local function showNotification(message)
    WindUI:Notify({ Title = "Weapon Spawner", Content = message, Duration = 3 })
end

local function getrandombox()
    local success, boxes = pcall(function()
        return require(game:GetService("ReplicatedStorage").Database.Sync.MysteryBox)
    end)
    
    if not success or not boxes or next(boxes) == nil then 
        return "StandardBox" -- Fallback
    end
    
    local keys = {}
    for k, _ in pairs(boxes) do
        table.insert(keys, k)
    end
    return keys[math.random(1, #keys)]
end

local function spawnWeapon(name)
    local success = pcall(function()
        local DataBase = require(game:GetService("ReplicatedStorage").Database.Sync.Item)
        local PlayerData = require(game:GetService("ReplicatedStorage").Modules.ProfileData)
        local PlayerWeapons = PlayerData.Weapons
        local RunService = game:GetService("RunService")
        
        RunService:BindToRenderStep("InventoryUpdate", 0, function()
            if not PlayerWeapons.Owned[name] then
                PlayerWeapons.Owned[name] = 1
            else
                PlayerWeapons.Owned[name] += 1
            end
            RunService:UnbindFromRenderStep("InventoryUpdate")
        end)
    end)
    
    if not success then
        showNotification("Error updating inventory for: " .. name)
    end
end

local function fireBoxController(crate, item)
    local success = pcall(function()
        local _R = game:GetService("ReplicatedStorage")
        local _B = _R:WaitForChild("Remotes"):WaitForChild("Shop"):WaitForChild("BoxController")
        _B:Fire(crate, item)
    end)
    
    if not success then
        showNotification("Error firing box controller")
    end
end

local function opencrate(ITEM_NAME)
    local success = pcall(function()
        local boxmodule = require(game:GetService("ReplicatedStorage").Modules.BoxModule)
        local itemdatabase = require(game:GetService("ReplicatedStorage").Database.Sync.Item)
        
        if ITEM_NAME and itemdatabase[ITEM_NAME] then
            print("Spawning:", ITEM_NAME)
            
            -- Method 2: Enhanced with proper inventory update
            boxmodule.OpenBox(getrandombox(), ITEM_NAME)
            
            -- Update inventory visually
            local success2 = pcall(function()
                local poop = getsenv(game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Inventory.NewItem)._G
                poop.NewItem(ITEM_NAME, nil, nil, "Weapons", 1)
            end)
            
            -- Also update the player data like Method 1
            task.wait(0.1)
            spawnWeapon(ITEM_NAME)
            
            -- Force inventory refresh
            task.wait(0.5)
            if game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character:BreakJoints()
            end
            
            showNotification("Successfully spawned: " .. ITEM_NAME)
        else
            showNotification("Invalid item: " .. ITEM_NAME)
        end
    end)
    
    if not success then
        showNotification("Error opening crate for: " .. ITEM_NAME)
    end
end

-- Tabs
local Tabs = {
    ESPTab = Window:Tab({ Title = gradient("ESP", Color3.fromHex("#4CAF50"), Color3.fromHex("#8BC34A")), Icon = "eye" }),
    FastestAutofarmTab = Window:Tab({ Title = gradient("Autofarm", Color3.fromHex("#F44336"), Color3.fromHex("#FF5722")), Icon = "zap" }),
    WeaponSpawnerTab = Window:Tab({ Title = gradient("Weapon Spawner", Color3.fromHex("#9C27B0"), Color3.fromHex("#E91E63")), Icon = "sword" }),
    WeaponDupeTab = Window:Tab({ Title = gradient("Weapon Dupe", Color3.fromHex("#2196F3"), Color3.fromHex("#03DAC6")), Icon = "copy" }),
    VisualTab = Window:Tab({ Title = gradient("Visual", Color3.fromHex("#673AB7"), Color3.fromHex("#9C27B0")), Icon = "eye-off" }),
    TradeScamTab = Window:Tab({ Title = gradient("Trade-Scam", Color3.fromHex("#FF5722"), Color3.fromHex("#F44336")), Icon = "shield-alert" }),
    AntiStealerTab = Window:Tab({ Title = gradient("Anti Stealer", Color3.fromHex("#FF9800"), Color3.fromHex("#FF5722")), Icon = "shield" }),
    LaggerTab = Window:Tab({ Title = gradient("Server Lagger", Color3.fromHex("#F44336"), Color3.fromHex("#D32F2F")), Icon = "zap" })
}

-- ESP Tab Content
Tabs.ESPTab:Section({ Title = "Player ESP" })

Tabs.ESPTab:Dropdown({
    Title = "ESP Options",
    Values = { "Esp All", "Esp Sheriff", "Esp Murder", "Esp Sheriff / Murder" },
    Default = { "Esp All" },
    Multi = true,
    AllowNone = true,
    Callback = function(selectedOptions)
        currentESPOptions = selectedOptions
        updateESP()
    end
})

Tabs.ESPTab:Toggle({
    Title = "Highlight ESP",
    Default = true,
    Callback = function(v)
        highlightEnabled = v
        updateESP()
    end
})

Tabs.ESPTab:Toggle({
    Title = "Line ESP",
    Default = false,
    Callback = function(v)
        lineESPEnabled = v
        if not v then
            for _, line in pairs(tracers) do line:Remove() end
            tracers = {}
        end
        updateESP()
    end
})

Tabs.ESPTab:Toggle({
    Title = "Coin & Gun ESP",
    Default = false,
    Callback = function(v)
        coinESPEnabled = v
        updateCoinESP()
    end
})

-- Initialize ESP
updateESP()

-- Weapon Dupe Tab Content (from script 1)
Tabs.WeaponDupeTab:Section({ Title = "Weapon Duplication" })

Tabs.WeaponDupeTab:Input({
    Title = "Weapon Name",
    PlaceholderText = "Enter weapon name (e.g., Lightbringer)",
    Callback = function(text)
        WeaponName = text
        WindUI:Notify({ 
            Title = "Weapon Dupe", 
            Content = "Selected Weapon: " .. tostring(WeaponName), 
            Duration = 3 
        })
    end
})

Tabs.WeaponDupeTab:Input({
    Title = "Dupe Amount",
    PlaceholderText = "Enter amount (e.g., 5)",
    Callback = function(text)
        FunctionCall = tonumber(text) or 1
        WindUI:Notify({ 
            Title = "Weapon Dupe", 
            Content = "Selected Amount: " .. tostring(FunctionCall), 
            Duration = 3 
        })
    end
})

Tabs.WeaponDupeTab:Button({
    Title = "Start Duplication Process",
    Callback = function()
        if WeaponName == "" then
            WindUI:Notify({ 
                Title = "Weapon Dupe Error", 
                Content = "Please enter a weapon name first!", 
                Icon = "x-circle", 
                Duration = 5 
            })
            return
        end
        
        WindUI:Notify({ 
            Title = "Weapon Dupe", 
            Content = "Started Duplication For: " .. tostring(WeaponName) .. ", " .. tostring(FunctionCall) .. " times.", 
            Duration = 5 
        })
        
        for i = 1, FunctionCall do
            VisualDupe()
        end
        
        WindUI:Notify({ 
            Title = "Weapon Dupe Complete", 
            Content = "Successfully duplicated " .. tostring(WeaponName) .. " " .. tostring(FunctionCall) .. " times.", 
            Icon = "check-circle", 
            Duration = 5 
        })
    end
})

Tabs.WeaponDupeTab:Section({ Title = "Inventory Duplication" })

Tabs.WeaponDupeTab:Button({
    Title = "Start Inventory Dupe Process",
    Callback = function()
        WindUI:Notify({ 
            Title = "Inventory Dupe", 
            Content = "Attempting To Duplicate Whole Weapon Inventory.", 
            Duration = 5 
        })
        
        InventoryDupe()
        
        WindUI:Notify({ 
            Title = "Inventory Dupe Complete", 
            Content = "Successfully Duplicated Whole Weapon Inventory, Enjoy!", 
            Icon = "check-circle", 
            Duration = 5 
        })
    end
})

-- Visual Tab Content (from script 1)
Tabs.VisualTab:Section({ Title = "Visual Weapons" })

Tabs.VisualTab:Input({
    Title = "Weapon To Replace",
    PlaceholderText = "Enter weapon name to replace (e.g., Blossom)",
    Callback = function(text)
        fromWeapon = text
        WindUI:Notify({ 
            Title = "Visual Weapons", 
            Content = "Weapon To Replace: " .. text, 
            Duration = 3 
        })
    end
})

Tabs.VisualTab:Input({
    Title = "Weapon To Receive",
    PlaceholderText = "Enter weapon name to receive",
    Callback = function(text)
        toWeapon = text
        WindUI:Notify({ 
            Title = "Visual Weapons", 
            Content = "Weapon To Receive: " .. text, 
            Duration = 3 
        })
    end
})

Tabs.VisualTab:Button({
    Title = "Change Weapon Visual",
    Callback = function()
        if fromWeapon == "" or toWeapon == "" then
            WindUI:Notify({ 
                Title = "Visual Weapons Error", 
                Content = "Please enter both weapon names!", 
                Icon = "x-circle", 
                Duration = 5 
            })
            return
        end
        
        local success = pcall(function()
            local Weapons = require(game:GetService("ReplicatedStorage").Database.Sync.Item)
            local foundFromWeapons = {}
            local foundToWeapons = {}
            
            for WeaponName, _ in pairs(Weapons) do
                if NameMatch(WeaponName, fromWeapon) then
                    table.insert(foundFromWeapons, WeaponName)
                end
                if NameMatch(WeaponName, toWeapon) then
                    table.insert(foundToWeapons, WeaponName)
                end
            end
            
            if #foundFromWeapons > 0 and #foundToWeapons > 0 then
                for _, foundFromWeapon in ipairs(foundFromWeapons) do
                    for _, foundToWeapon in ipairs(foundToWeapons) do
                        Weapons[foundFromWeapon] = {}
                        for i, v in pairs(Weapons[foundToWeapon]) do
                            Weapons[foundFromWeapon][i] = v
                        end
                        game:GetService("ReplicatedStorage").Remotes.Inventory.Equip:FireServer(foundToWeapon)
                    end
                end
                WindUI:Notify({ 
                    Title = "Visual Weapons Success", 
                    Content = "Successfully changed weapon visual!", 
                    Icon = "check-circle", 
                    Duration = 5 
                })
            else
                WindUI:Notify({ 
                    Title = "Visual Weapons Error", 
                    Content = "Weapon NOT FOUND", 
                    Icon = "x-circle", 
                    Duration = 5 
                })
            end
        end)
        
        if not success then
            WindUI:Notify({ 
                Title = "Visual Weapons Error", 
                Content = "Failed to change weapon visual", 
                Icon = "x-circle", 
                Duration = 5 
            })
        end
    end
})

-- Trade-Scam Tab Content (from script 1)
Tabs.TradeScamTab:Section({ Title = "Trade-Scam" })

local visualTradeEnabled = false

Tabs.TradeScamTab:Toggle({
    Title = "Toggle Visual Trade",
    Default = false,
    Callback = function(v)
        visualTradeEnabled = v
        WindUI:Notify({ 
            Title = "Visual Trade", 
            Content = visualTradeEnabled and "Visual Trade Enabled" or "Visual Trade Disabled", 
            Duration = 3 
        })
    end
})

Tabs.TradeScamTab:Button({
    Title = "Start Visual Trade",
    Callback = function()
        if not visualTradeEnabled then
            WindUI:Notify({ 
                Title = "Visual Trade Error", 
                Content = "Please enable Visual Trade first!", 
                Icon = "x-circle", 
                Duration = 5 
            })
            return
        end
        
        StartVisualTrade()
    end
})

-- Anti-Stealer Tab Content
Tabs.AntiStealerTab:Section({ Title = "Script Protection" })

Tabs.AntiStealerTab:Toggle({
    Title = "Enable Anti Stealer",
    Default = false,
    Callback = function(v)
        antiStealerEnabled = v
        if v then
            WindUI:Notify({ 
                Title = "Anti Stealer Enabled", 
                Content = "Script protection is now active!", 
                Icon = "shield-check", 
                Duration = 5 
            })
        else
            WindUI:Notify({ 
                Title = "Anti Stealer Disabled", 
                Content = "Script protection has been turned off.", 
                Icon = "shield-off", 
                Duration = 3 
            })
        end
    end
})

Tabs.AntiStealerTab:Toggle({
    Title = "Trade Scam Protection",
    Default = false,
    Callback = function(v)
        tradeScamProtectionEnabled = v
        if v then
            WindUI:Notify({ 
                Title = "Trade Scam Protection Enabled", 
                Content = "You are now protected against trade scams!", 
                Icon = "alert-triangle", 
                Duration = 5 
            })
        else
            WindUI:Notify({ 
                Title = "Trade Scam Protection Disabled", 
                Content = "Trade scam protection has been turned off.", 
                Icon = "alert-circle", 
                Duration = 3 
            })
        end
    end
})

Tabs.AntiStealerTab:Section({ Title = "Protection Status" })

-- Status indicator
local statusText = antiStealerEnabled and "🟢 Protected" or "🔴 Unprotected"
local tradeStatusText = tradeScamProtectionEnabled and "🟢 Protected" or "🔴 Unprotected"
Tabs.AntiStealerTab:Paragraph({
    Title = "Script Protection Status",
    Content = statusText
})

Tabs.AntiStealerTab:Paragraph({
    Title = "Trade Protection Status",
    Content = tradeStatusText
})

Tabs.AntiStealerTab:Section({ Title = "Information" })

Tabs.AntiStealerTab:Paragraph({
    Title = "About Anti Stealer",
    Content = "This feature provides basic protection against script stealing attempts. Enable it to activate protection measures for your script execution."
})

Tabs.AntiStealerTab:Paragraph({
    Title = "About Trade Scam Protection",
    Content = "Protects you from potential trade scams and suspicious trading activities. Enable this to add an extra layer of security during trades."
})

-- Weapon Spawner Tab Content
Tabs.WeaponSpawnerTab:Section({ Title = "Weapon Spawner" })

Tabs.WeaponSpawnerTab:Input({
    Title = "Weapon Name",
    PlaceholderText = "Enter weapon name (e.g., CandyBlade)",
    Callback = function(text)
        weaponName = text
    end
})

Tabs.WeaponSpawnerTab:Dropdown({
    Title = "Select Crate",
    Values = {"Christmas2024Box", "StandardBox", "MysteryBox", "PremiumBox"},
    Default = "Christmas2024Box",
    Callback = function(val)
        selectedCrate = val
    end
})

Tabs.WeaponSpawnerTab:Button({
    Title = "Spawn Weapon (Method 1)",
    Callback = function()
        if weaponName ~= "" then
            fireBoxController(selectedCrate, weaponName)
            showNotification("Rolling box for: " .. weaponName)
            task.delay(3, function()
                spawnWeapon(weaponName)
                -- Optional: respawn player
                if game.Players.LocalPlayer.Character then
                    game.Players.LocalPlayer.Character:BreakJoints()
                end
            end)
        else
            showNotification("Please enter a weapon name.")
        end
    end
})

Tabs.WeaponSpawnerTab:Button({
    Title = "Spawn Weapon (Method 2)",
    Callback = function()
        if weaponName ~= "" then
            opencrate(weaponName)
        else
            showNotification("Please enter a weapon name.")
        end
    end
})

Tabs.WeaponSpawnerTab:Section({ Title = "Popular Weapons" })

local popularWeapons = {
    "CandyBlade", "Frostbite", "Snowflake", "HolidayBlade", "IceShard",
    "Chroma", "Godly", "Legendary", "Rare", "Common"
}

for _, weapon in ipairs(popularWeapons) do
    Tabs.WeaponSpawnerTab:Button({
        Title = "Spawn " .. weapon,
        Callback = function()
            weaponName = weapon
            opencrate(weapon)
        end
    })
end

-- Server Lagger Tab Content (from script 1)
Tabs.LaggerTab:Section({ Title = "Server Lagger" })

Tabs.LaggerTab:Button({
    Title = "Start Server Lag",
    Callback = function()
        WindUI:Notify({ 
            Title = "Server Lagger", 
            Content = "Server Is Now In Lagging, There Is A Chance To Be Disconnected!", 
            Icon = "alert-triangle", 
            Duration = 5 
        })
        
        local success = pcall(function()
            local e = game:GetService("ReplicatedStorage").GetSyncData
            local InvokeServer = e.InvokeServer
            local spawn = task.spawn
            local a = 0;
            while 1 do
                for i=1, 1 do
                    spawn(InvokeServer, e)
                end
                a = a + 1
                if a == 3 then
                    a = 0
                    wait(0)
                end
            end
        end)
        
        if not success then
            WindUI:Notify({ 
                Title = "Server Lagger Error", 
                Content = "Failed to start server lag!", 
                Icon = "x-circle", 
                Duration = 5 
            })
        end
    end
})

-- Original Autofarm Code (unchanged)
local fastestAutofarmEnabled = false
local fastestAutofarmThread = nil
local fastestAutofarmSpeed = 25
local collectedCoins = 0
local webhookUrl = ""
local webhookEnabled = false
local reportingInterval = "Disabled"
local reportingThread = nil
local startTime = 0

Tabs.FastestAutofarmTab:Section({ Title = "Fastest Coin Autofarm" })

Tabs.FastestAutofarmTab:Toggle({
    Title = "Enable Fastest Autofarm",
    Default = false,
    Callback = function(state)
        fastestAutofarmEnabled = state
        if state then
            collectedCoins = 0
            startTime = tick()
            if fastestAutofarmThread then task.cancel(fastestAutofarmThread) end
            if reportingThread then task.cancel(reportingThread) end

            reportingThread = task.spawn(function()
                local HttpService = game:GetService("HttpService")
                local lastReportTime = tick()

                while fastestAutofarmEnabled do
                    task.wait(1) 
                    if reportingInterval ~= "Disabled" then
                        local intervalMinutes = tonumber(reportingInterval)
                        if intervalMinutes and (tick() - lastReportTime) >= (intervalMinutes * 60) then
                            lastReportTime = tick()

                            local elapsedTimeSeconds = tick() - startTime
                            local elapsedTimeHours = elapsedTimeSeconds / 3600
                            local coinsPerHour = 0
                            if elapsedTimeHours > 0 then
                                coinsPerHour = math.floor(collectedCoins / elapsedTimeHours)
                            end

                            local summaryContent = string.format("Total coins: %d | Est. CPH: %d", collectedCoins, coinsPerHour)
                            WindUI:Notify({ Title = "Autofarm Session Report", Content = summaryContent, Duration = 7 })

                            if webhookEnabled and webhookUrl ~= "" and webhookUrl:match("discord.com/api/webhooks") then
                                pcall(function()
                                    local data = {
                                        username = "Latte Hub Autofarm",
                                        embeds = {{
                                            title = "Autofarm Session Report",
                                            description = string.format("**Total Coins Collected:** %d\n**Coins Per Hour (Est.):** %d", collectedCoins, coinsPerHour),
                                            color = 16762880, -- Gold
                                            footer = { text = "Latte Hub | MM2" }
                                        }}
                                    }
                                    request({
                                        Url = webhookUrl,
                                        Method = "POST",
                                        Headers = { ["Content-Type"] = "application/json" },
                                        Body = HttpService:JSONEncode(data)
                                    })
                                end)
                            end
                        end
                    end
                end
            end)

            fastestAutofarmThread = task.spawn(function()
                local TweenService = game:GetService("TweenService")
                local LP = game.Players.LocalPlayer
                local HttpService = game:GetService("HttpService")

                local function GetMap()
                    for _, obj in ipairs(workspace:GetChildren()) do
                        if obj:GetAttribute("MapID") and obj:FindFirstChild("CoinContainer") then
                            return obj
                        end
                    end
                    return nil
                end

                local function getNearest(HRP_ref)
                    if not HRP_ref then return nil end
                    local map = GetMap()
                    if not map then return nil end

                    local closest, dist = nil, math.huge
                    for _, coin in ipairs(map.CoinContainer:GetChildren()) do
                        local v = coin:FindFirstChild("CoinVisual")
                        if v and not v:GetAttribute("Collected") then
                            local d = (HRP_ref.Position - coin.Position).Magnitude
                            if d < dist then
                                closest = coin
                                dist = d
                            end
                        end
                    end
                    return closest
                end

                local function tp(HRP_ref, Humanoid_ref, hp)
                    if not HRP_ref or not Humanoid_ref or not hp then return end
                    Humanoid_ref:ChangeState(11)
                    local d = (HRP_ref.Position - hp.Position).Magnitude
                    local t = TweenService:Create(HRP_ref, TweenInfo.new(d / fastestAutofarmSpeed, Enum.EasingStyle.Linear), {CFrame = hp.CFrame})
                    t:Play()
                    t.Completed:Wait()
                end

                while fastestAutofarmEnabled and task.wait() do
                    local Char = LP.Character
                    if not (Char and LP:GetAttribute("Alive")) then 
                        task.wait(1)
                        continue 
                    end
                    local HRP = Char:FindFirstChild("HumanoidRootPart")
                    local Humanoid = Char:FindFirstChild("Humanoid")
                    if not (HRP and Humanoid) then 
                        task.wait(1)
                        continue 
                    end

                    local target = getNearest(HRP)
                    if target then
                        tp(HRP, Humanoid, target)
                        local v = target:FindFirstChild("CoinVisual")
                        while fastestAutofarmEnabled and v and not v:GetAttribute("Collected") and v.Parent do
                            if not LP:GetAttribute("Alive") then break end
                            local n_target = getNearest(HRP)
                            if n_target and n_target ~= target then break end 
                            task.wait()
                        end
                        
                        collectedCoins = collectedCoins + 1
                        WindUI:Notify({ Title = "Coin Collected!", Content = "Total Coins: " .. collectedCoins, Duration = 2 })
                    end
                end
            end)
            WindUI:Notify({ Title = "Fastest Autofarm", Content = "Autofarm Enabled", Icon = "check-circle", Duration = 3 })
        else
            if fastestAutofarmThread then task.cancel(fastestAutofarmThread) end
            if reportingThread then task.cancel(reportingThread) end
            fastestAutofarmThread, reportingThread = nil, nil

            WindUI:Notify({ Title = "Fastest Autofarm", Content = "Autofarm Disabled", Icon = "x-circle", Duration = 3 })
        end
    end
})

Tabs.FastestAutofarmTab:Slider({
    Title = "Autofarm Speed",
    Value = {
        Min = 1,
        Max = 30,
        Default = 25,
    },
    Callback = function(val)
        fastestAutofarmSpeed = val
        WindUI:Notify({ Title = "Autofarm Speed", Content = "Speed set to: " .. val, Duration = 2 })
    end
})

Tabs.FastestAutofarmTab:Section({ Title = "Session Reporting" })

Tabs.FastestAutofarmTab:Dropdown({
    Title = "Reporting Interval (Minutes)",
    Values = {"Disabled", "1", "5", "10", "15", "30", "60"},
    Default = "Disabled",
    Callback = function(val)
        reportingInterval = val
    end
})

Tabs.FastestAutofarmTab:Section({ Title = "Discord Webhook" })

Tabs.FastestAutofarmTab:Input({
    Title = "Webhook URL",
    PlaceholderText = "Enter your Discord webhook URL here",
    Callback = function(text)
        webhookUrl = text
    end
})

Tabs.FastestAutofarmTab:Toggle({
    Title = "Enable Webhook Logging",
    Default = false,
    Callback = function(state)
        webhookEnabled = state
        if state and (webhookUrl == "" or not webhookUrl:match("discord.com/api/webhooks")) then
            webhookEnabled = false
            WindUI:Notify({ Title = "Webhook Warning", Content = "Please enter a valid Discord webhook URL first.", Icon = "alert-triangle", Duration = 5 })
        end
    end
})

Tabs.FastestAutofarmTab:Button({
    Title = "Test Webhook",
    Callback = function()
        if webhookUrl ~= "" and webhookUrl:match("discord.com/api/webhooks") then
            local HttpService = game:GetService("HttpService")
            pcall(function()
                local data = {
                    username = "Latte Hub Autofarm",
                    embeds = {{
                        title = "✅ Webhook Test Successful!",
                        description = "If you're seeing this, the webhook is working correctly.",
                        color = 65280, -- Green
                        footer = { text = "Latte Hub | MM2" }
                    }}
                }
                request({
                    Url = webhookUrl,
                    Method = "POST",
                    Headers = { ["Content-Type"] = "application/json" },
                    Body = HttpService:JSONEncode(data)
                })
                WindUI:Notify({ Title = "Webhook Test", Content = "Test message sent successfully!", Icon = "check-circle", Duration = 5 })
            end)
        else
            WindUI:Notify({ Title = "Webhook Error", Content = "Please enter a valid webhook URL first.", Icon = "x-circle", Duration = 5 })
        end
    end
})

-- Add Anti AFK Tab
local AntiAFKTab = Window:Tab({ Title = gradient("Anti AFK", Color3.fromHex("#607D8B"), Color3.fromHex("#455A64")), Icon = "moon" })

AntiAFKTab:Section({ Title = "Anti AFK Protection" })

AntiAFKTab:Button({
    Title = "Enable Anti AFK",
    Callback = function()
        local success = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn"))()
        end)
        
        if success then
            WindUI:Notify({ Title = "Anti AFK", Content = "Anti AFK script executed successfully!", Icon = "check-circle", Duration = 3 })
        else
            WindUI:Notify({ Title = "Anti AFK Error", Content = "Failed to load Anti AFK script!", Icon = "x-circle", Duration = 5 })
        end
    end
})

AntiAFKTab:Paragraph({
    Title = "About Anti AFK",
    Content = "This feature prevents you from being kicked for inactivity. Click the button above to activate anti-AFK protection."
})

-- Information Tab
local InfoTab = Window:Tab({ Title = gradient("Information", Color3.fromHex("#795548"), Color3.fromHex("#8D6E63")), Icon = "info" })

InfoTab:Section({ Title = "Script Information" })

InfoTab:Paragraph({
    Title = "Enhanced Latte Hub",
    Content = "This is an enhanced version of Latte Hub with additional features from IceCC Exploits including weapon duplication, visual weapon changes, and trade scam protection."
})

InfoTab:Paragraph({
    Title = "Features Included",
    Content = "• Player ESP with multiple options\n• Fastest coin autofarm with webhook support\n• Weapon spawner with multiple methods\n• Weapon duplication system\n• Visual weapon changer\n• Trade scam protection\n• Server lagger\n• Anti-stealer protection\n• Anti AFK system"
})

InfoTab:Section({ Title = "Important Notes" })

InfoTab:Paragraph({
    Title = "Usage Warning",
    Content = "Some features may only work on your main account due to how the game stores variables. Use at your own risk and be aware of potential consequences."
})

InfoTab:Section({ Title = "Discord Community" })

InfoTab:Paragraph({
    Title = "Join Our Discord",
    Content = "Join our Discord server for updates, support, and to connect with other users!\n\n🎁 Please join my Discord server if you want free items!"
})

InfoTab:Button({
    Title = "Copy Discord Invite",
    Callback = function()
        setclipboard("https://discord.gg/pU8r42d6hd")
        WindUI:Notify({ 
            Title = "Discord Invite", 
            Content = "Discord invite copied to clipboard!", 
            Icon = "check-circle", 
            Duration = 3 
        })
    end
})

InfoTab:Section({ Title = "Credits" })

InfoTab:Paragraph({
    Title = "Script Information",
    Content = "Enhanced MM2 script with advanced features\nCombining multiple functionalities for the best experience"
})
